package integerStack;

import java.util.Arrays;

public class MyIntegerStack implements IntegerStack{
	//Defining fields 
	private int top;
	private int[] data;
	private static final int DEFAULT_CAPACITY = 10;
	
	//Constructor
	public MyIntegerStack(){
		this.top = -1;
		this.data = new int[DEFAULT_CAPACITY];
	}
	
	public MyIntegerStack(int capacity){
		this.top=-1;
		this.data = new int[capacity];
	} 
	
	public MyIntegerStack(int[] array){
		this.top=-1;
		this.data = Arrays.copyOf(array, array.length);
	}
	
	//Methods 
	public boolean isEmpty(){
		return this.top == -1;
	}
	public int peek(){
		return data[top];
	}
	public int pop(){
		if(isEmpty()) throw new EmptyStackException();
		return data[top--];
	}
	
	public void push(int item){
		if(top == data.length - 1){
			resize(2*data.length);
			data[++top] = item;
		}
	}
	public int size(){
		return data.length;
	}
	
	public void resize(int newCapcity){
		int[] newData = new int[newCapcity];
		for(int i=0;i<data.length;i++){
			newData[i] = data[i];
		}
		data = newData;
	}
	
	
}
